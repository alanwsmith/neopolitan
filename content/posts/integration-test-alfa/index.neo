-> title

Integration Test Alfa 

A smoke test to verify basic functionality 


-> h3
>> class: heading

Aside Section

-> aside
>> class: alfa_aside
>> id: alfa

Bring your best compass to the third class


-> h3
>> class: heading

Blockquote Section

-> blockquote
>> class: bravo_blockquote
>> id: bravo

Cap the jar with a tight brass cover.

Crack the walnut with your sharp side teeth.



-> h3
>> class: heading

Checklist Section


-> checklist

note: this needs to be updated so the checkboxes only 
show on the first paragraph

- And now we're in a checklist

- With some items

- To check off




-> h3
>> class: heading

Code Section

-> code
>> python

for i in range(1,10):
    print("hello, world")



-> h3
>> class: heading

TODO: Config Section

Key/value pairs that are passed to the templates 
for rendering decisions. 

These can be arbitrary vs the attributes 
which are defined




-> h3
>> class: heading

CSS Section

Nothing visual shows up here. The section
content is put into the head of the page. 


-> css

body { color: green; }

body { background-color: #231122; }

.heading { 
    border-bottom: 1px solid; 
    padding-bottom: 2px;  
    padding-top: 30px;
}




-> h3
>> class: heading

H1 Section

-> h1

Cut the pie 

Slide the catch back and open the desk


-> h3
>> class: heading

H2 Section

-> h2

Dip the pail 

Slide the tray across the glass top


-> h3
>> class: heading

H3 Section

-> h3

Let it settle

Split the log with a quick, sharp blow


-> h3
>> class: heading

H4 Section

-> h4

Fasten two pins

Tack the strip of carpet to the worn floor


-> h3
>> class: heading

H5 Section

-> h5

Tuck the sheet

Take the match and strike it against your shoe


-> h3
>> class: heading

H6 Section

-> h6

Drop the ashes

Take the winding path to reach the lake


-> h3
>> class: heading

Hidden Section

Nothing shows up here on the page. The section is
for notes that shouldn't be published (though you
shouldn't put anything sensitive in there because
mistakes happen)

-> hidden

This does not render in the page output


-> h3
>> class: heading

HR Section


-> hr


-> h3
>> class: heading

HR Section


-> html

<div style="color: red;">This is raw HTML with a style</div>


-> h3
>> class: heading

Image Section


-> image
>> https://placekitten.com/g/200/300
>> class: echo

This is the alt text for the image


-> h3
>> class: heading

List Section

-> list

This is a basic list 

- alfa
bravo

- charlie

delta



-> h3
>> class: heading

TODO: Note Section

-> note

This is a stand alone note



-> h3
>> class: heading

Notes Section

-> notes

This is a notes section that is like a list

- delta
charlie

- echo 

foxtrot


-> h3
>> class: heading

TODO: OList Section

An ordered list

- echo
whiskey

- sierra

tango


-> h3
>> class: heading

Open/Close Div Section

-> opendiv
>> class: raw

-> list

- foxtrot

- sierra

-> closediv

TODO: Remove the need for content here before 
the next tag. 

TODO: Switch to `-> p` automatically if
you don't hit another tag

-> h3
>> class: heading

P Section

-> p
>> class: sierra bravo

This is a paragraph with the class set to
`sierra bravo`



-> h3
>> class: heading

Pre Section

-> pre

this is some preformatted
text to display



-> h3
>> class: heading

Script Section

This section is added to the head of the document in a
`script`html` tag. In this example it updates the 
contents of a `-> p`neo` section.

-> script

const update_example = () => {
    script_target.innerHTML = new Date();
}

document.addEventListener("DOMContentLoaded", setInterval(update_example, 1000))


-> p
>> id: script_target

Loading script example


-> h3
>> class: heading

Start/End Code Section

This is used to make code blocks that can contain 
neopolitan tags. 

-> startcode

This is a neotag in a code block

-> h2

-> endcode



-> h3
>> class: heading

Title Section

The title section is at the top of the page. It's
not duplicated here because there should only 
be one per page. 


-> h3
>> class: heading

Vimeo Section

-> vimeo
>> 786334291



-> h3
>> class: heading

Youtube Section

-> youtube
>> _YUzQa_1RCE







-> hr

-> hr

-> hr















-> h3

Inline Tags

-> list

Here's the basic inline tags

- Strong: <<example|strong>>

- Code without language: <<alfa|code>>

- Code with language: <<bravo|code|rust>> 

- Code with language and attributes: <<charlie|code|rust|id: asdf|class: testing>>

- Code with attributes and no language: <<delta|code|class: testing>>









This is the second paragraph

This is <<text with a strong tag|strong>> applied

Here is <<an example|link|https://www.alanwsmith.com/|id: alfa>> link

This is `a shorthand sippet`` of code




-> h2

This is pre stuff below after a hidden
item that only shows up in the source
file





-> h6

Getting ready for olist

-> olist

This is the start of an ordered list

- alfa

- bravo

- charlie


-> h4

Script is done above this

-> todo

[] this is unchecked

[x] this is checked


-> widget
>> example_widget

This will be a json or list of lines section
that calls out to a example for rendering

-> ext
>> ls /Users/alan/workshop/neopolitan
>> format: lines
>> widget: ls



-> categories
>> Neopolitan

-> attributes
>> date: 2023-06-18 14:29:39
>> id: 2roeyctm
>> site: aws
>> type: post
>> status: published
>> template: post


