-- title

TODOs


-- todo

[] Add web server?

[] Add front end?

[] Generate most recently changed page at
specific location so you can see most
recent set of changes automatically?

[] Add ``wiki`` tag and functionality
for third level? (or maybe fourth)?

[] Add plugin architecture (this wo_json::fromuld
be a later version)

[] Add ``-- extension:`` to ``-- metadata``
for changing the file extension of
the output. 

[] Add ``-- path:`` to the ``-- metadata``
to change the output path. 

[] Set up functionality for ``-- wiki``
in the metadata the defines the target
locations where other ``<<wiki\|Name>>``
entires go. 

[] For the plugin architecture. 
Send the ast to a function which 
updates it as it sees fit then
sends it back. Plugins can do things
like add toplevel items as siblings
of ``pages`` in the site ast. 

[] Plugins could also update content.
Basically do whatever to the ast. 
There would likely need to be templates
that are used with them. There might
be a way to send those back, but
at least for the first version just
have folks copy pasted them into
their template files. 

[] It's up to plugins to do their
own caching? Could there be a cache
feature builtin? Probably. Just
send back the prior object from 
the plugin. Yeah, that probably 
makes the most sense. 

[] Make adding ``figure`` to 
to raw sections part of the 
default templates

[] Make ``-- wiki-key`` what you add
to a pages ``-- metadata`` to define
keys. Can have multiple of them. 

[] The page asts take care of themselves.
Spec out other parts under the site
(like "wiki" that are part of
the reference engine.

[] Put tags and groups under the
standard reference engine. 

[] Automatic ``figure`` numbering on
pages with the ability to link
to them with some sort of tag

[] Automatically put commas
between multiple consecutive
footnote links

[] Build a little debug thing
into place where if you're
on localhost and hit ``/``
it brings an interface for you. 
Could have things like the colors
on it. lists of tags, etc...

[] Store stuff in ``/.neo-files``
so it's hidden from the main
file system. 

[] Store feeds in ``/.neo-feeds``
so they don't have to show up
on the file system. 

[] Set up counters that can be used
for things on the page. Like
numbers for headings and figures. 

[] Add better error message if
a template doesn't exist. 

[] Test doing thing like having a 
footnote shorthand butted directly
up against a code shorthand. 

[] Set up macro that lets you see
the next and previous blocks. 
This will let you do stuff
like group ``code`` and
``output`` sections together
and wrap them with a ``div``
so they can have a single 
border around them. 

[] Show how to use blocks for 
``forward`` and ``tldr`` to shift
stuff around so you can keep them
in different places in your source
files. 

[] Set up a way to include blocks
from other pages based off their
IDs. 

[] Make sure to test characters bumping
directly against shorthands and tags. 

[] Have the ability to use random
numbers to pick things. 

[] Add ``-- head`` type as standard
for putting raw items in the
head of the document. 

[] Make ``nowrap`` a defined attr for spans. 
(and, just generally go through the global
attrs and spec them out. They should be hoisted
into the output automatically.)


-- p

Things to check

-- pre/

-- forward/
-- title: Just The Front

I feel like Python gaslights me every time I try to remove
extensions from a filename. It makes sense when I do this:

-- code
-- python

print("asdf")

-- results/

asdf

-- /results

-- /forward

-- /pre


-- metadata 
-- created: 2025-04-27T10:20:20-04:00
-- updated: 2025-04-27T10:20:20-04:00

